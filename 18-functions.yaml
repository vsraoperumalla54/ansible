  - name: functions
    hosts: local
    connection: local
    vars:
      technologies: DevOps, Linux, Shell, Ansible # String variable
      name: Mohit Lakshmi Narasimha
      gmail: Mohit@example.com
      ipaddress: "192.168.0.1"
      # dictionary==map
      tags: # List variable
        Application: payment
        Environment: dev
      listTags: # List of maps
      - key: Application
        value: payment
      - key: dev
        value: Production
    tasks:
    - name: default variable
      ansible.builtin.debug:
        msg: "Hello {{ name | default('Mohit') }}" # Default variable if not defined

    # Split string into list
    - name: Convert string to list
      ansible.builtin.debug:
        msg: "Technologies are: {{ technologies | split(', ') }}"

    - name: Convert map to list
      ansible.builtin.debug:
        msg: "Tags are: {{ tags | dict2items }}"

    - name: Convert list into map
      ansible.builtin.debug:
        msg: "List Tags are: {{ listTags | items2dict }}" 
    
    - name: read yaml and take it into the variable
      ansible.builtin.set_fact:
        student_yaml: "{{ lookup('file', 'student.yaml') | from_yaml }}" # Read yaml file and convert to dictionary

    - name: Convert yaml to json
      ansible.builtin.debug:
        msg: "Student info in json format: {{ student_yaml | to_nice_json }}" # Convert to json and print
    
    - name: Save json to file
      ansible.builtin.copy:
        content: "{{ student_yaml | to_nice_json }}" # Convert to json and save to file
        dest: "./student-data.json"

    - name: Convert to Uppercase
      ansible.builtin.debug:
        msg: "{{ name | upper }}" # Convert to uppercase
    
    - name: Convert to Lowercase
      ansible.builtin.debug:
        msg: "{{ gmail | lower }}" # Convert to lowercase

    - name: Ip address is valid or not
      ansible.builtin.debug:
        msg: "{{ ipaddress | ipaddr }}" # Returns True or False
        # msg: "IP address {{ ipaddress }} is valid? {{ ipaddress | ipaddr }}" --- IGNORE ---

    - name: grep for root user
      #ansible.builtin.command: "cat /etc/passwd | grep root"
      ansible.builtin.shell: "cat /etc/passwd | grep root"
      register: command_output
    
    - name: print the command_output
      ansible.builtin.debug:
        msg: "{{ command_output }}"

    # - name: redirect the output
    #   #ansible.builtin.command: ls -lrta > tmp/output.txt
    #   #ansible.builtin.shell: "ls -lrta > tmp/output.txt"
    #   register: redirect_output

    # - name: print the redirect_output
    #   ansible.builtin.debug:
    #     msg: "{{ redirect_output }}"